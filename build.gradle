/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4/userguide/java_library_plugin.html
 */
buildscript {
	ext {
		springBootVersion 	= '2.2.2.RELEASE'
	}
	repositories {
		mavenCentral();
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
	}
}

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter();
	mavenCentral();
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.0.1-jre'
    
	compile group: 'org.projectlombok', name: 'lombok', version: '1.18.10'
    
    /*Depenendencias del micro servicio*/
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.2.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.2.0.RELEASE'
    compile group: 'com.graphql-java', name: 'graphql-spring-boot-starter', version: '5.0.2'
    compile group: 'com.graphql-java', name: 'graphql-java-tools', version: '5.2.4'
    compile group: 'com.graphql-java', name: 'graphiql-spring-boot-starter', version: '5.0.2'
    compile group: 'com.h2database', name: 'h2', version: '1.4.200'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

/*dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}*/

task copyTask(type: Copy) {
	dependsOn build

	from 'config/'
	into 'build/libs/config/'
}
build.finalizedBy(copyTask)